// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource postgresql {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "postgresql"
}

generator client {
  provider = "prisma-client-js"
  output   = "node_modules/.prisma/client"
}

model Spotify {
  id           Int    @id
  token        String @default("")
  refreshToken String @default("")
}

model User {
  id       String @id @default(uuid()) @postgresql.Uuid
  name     String @default("")
  email    String @unique @default("")
  password String
  posts    Post[] @relation("Post_author")
}

model Post {
  id       String    @id @default(uuid()) @postgresql.Uuid
  title    String    @default("")
  status   String?   @default("draft")
  content  Json      @default("[{\"type\":\"paragraph\",\"children\":[{\"text\":\"\"}]}]")
  postedOn DateTime? @default(now())
  slug     String    @unique @default("")
  author   User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId String?   @map("author") @postgresql.Uuid
  tags     Tag[]     @relation("Post_tags")

  @@index([authorId])
}

model Tag {
  id    String @id @default(uuid()) @postgresql.Uuid
  name  String @default("")
  posts Post[] @relation("Post_tags")
}

model Education {
  id          String @id @default(uuid()) @postgresql.Uuid
  title       String @default("")
  duration    String @default("")
  location    String @default("")
  cover_image Json?
}

model Experience {
  id           String       @id @default(uuid()) @postgresql.Uuid
  title        String       @default("")
  location     String       @default("")
  type         String       @default("")
  duration     String       @default("")
  description  String       @default("")
  cover_image  Json?
  technologies Technology[] @relation("Technology_experiences")
}

model Technology {
  id            String      @id @default(uuid()) @postgresql.Uuid
  name          String      @default("")
  experiences   Experience? @relation("Technology_experiences", fields: [experiencesId], references: [id])
  experiencesId String?     @map("experiences") @postgresql.Uuid

  @@index([experiencesId])
}
